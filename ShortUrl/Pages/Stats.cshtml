@page
@model StatsModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "URL Statistics";
}

<div class="container py-4">
    
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-page="/Index">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Statistics</li>
                </ol>
            </nav>

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>@Model.ErrorMessage
                </div>
            }

            @if (Model.UrlShort == null && Model.UserUrls.Any())
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white">
                        <h4 class="mb-0">Your URL Statistics</h4>
                    </div>
                    <div class="card-body">
                        <form method="get" class="mb-4">
                            <div class="row g-3 align-items-center">
                                <div class="col-md-4">
                                    <label class="form-label">Start Date</label>
                                    <input type="date" name="startDate" class="form-control"/>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label">End Date</label>
                                    <input type="date" name="endDate" class="form-control"/>
                                </div>
                                <div class="col-md-4">
                                    <form method="get" class="mb-3">
                                        <label for="PageSize">Items per page:</label>
                                        <select id="PageSize" name="PageSize" onchange="this.form.submit()">
                                            <option value="2" selected=@(Model.PageSize == 2)>2</option>
                                            <option value="5" selected=@(Model.PageSize == 5)>5</option>
                                            <option value="10" selected=@(Model.PageSize == 10)>10</option>
                                            <option value="20" selected=@(Model.PageSize == 20)>20</option>
                                        </select>
                                        <input type="hidden" name="pageNumber" value="@Model.PageNumber" />
                                    </form>
                                </div>
                                <div class="col-md-4 d-flex align-items-end">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-filter me-2"></i>Filter
                                    </button>
                                </div>
                            </div>
                        </form>

                        <div class="mb-4">
                            <h5>Overview</h5>
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <div class="card bg-light">
                                        <div class="card-body text-center">
                                            <h3 class="mb-0">@Model.UserUrls.Count</h3>
                                            <p class="text-muted mb-0">Active URLs</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card bg-light">
                                        <div class="card-body text-center">
                                            <h3 class="mb-0">@Model.TotalClicks</h3>
                                            <p class="text-muted mb-0">Total Clicks</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="card bg-light">
                                        <div class="card-body text-center">
                                            <h3 class="mb-0">@(Model.UserUrls.Count > 0 ? Math.Round((double)Model.TotalClicks / Model.UserUrls.Count, 1) : 0)</h3>
                                            <p class="text-muted mb-0">Avg. Clicks Per URL</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h5>Clicks Over Time</h5>
                            <canvas id="clicksChart" height="250"></canvas>
                        </div>

                        <h5>Your URLs</h5>
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                <tr>
                                    <th>Short URL</th>
                                    <th>Original URL</th>
                                    <th>Clicks</th>
                                    <th>Created</th>
                                    <th>Actions</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach (var url in Model.UserUrls)
                                {
                                    <tr>
                                        <td><code>@($"{Request.Scheme}://{Request.Host}/{url.Code}")</code></td>
                                        <td>@(url.DestinationUrls.FirstOrDefault()?.Url?.Substring(0, Math.Min(30, url.DestinationUrls.FirstOrDefault()?.Url?.Length ?? 0)) ?? "")</td>
                                        <td>@url.ClickStats.Count</td>
                                        <td>@url.CreatedAt.ToString("MMM d, yyyy")</td>
                                        <td>
                                            <a asp-page="/Stats" asp-route-id="@url.Id" class="btn btn-sm btn-primary">
                                                <i class="fas fa-chart-bar"></i>
                                            </a>
                                            <a asp-page="/ShortenUrl" asp-page-handler="Delete" asp-route-id="@url.Id" class="btn btn-sm btn-secondary">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            
                                            <form method="post" asp-page-handler="Delete" asp-route-id="@url.Id" style="display:inline;">
                                                <button type="submit" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this Url?');">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </form> 
                                        </td>
                                    </tr>
                                }
                                </tbody>
                            </table>

                            <nav>
                                <ul class="pagination">
                                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                        <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)">Previous</a>
                                    </li>
                                    @for (int i = 1; i <= Model.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                            <a class="page-link" href="?pageNumber=@i">@i</a>
                                        </li>
                                    }
                                    <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                                        <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            }
            else if (Model.UrlShort != null)
            {
                <div class="card shadow-sm mb-4">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">URL Statistics</h4>
                        <a asp-page="/Stats" class="btn btn-sm btn-light">
                            <i class="fas fa-arrow-left me-1"></i>Back to All Stats
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h5>URL Details</h5>
                                <dl class="row">
                                    <dt class="col-sm-4">Short URL</dt>
                                    <dd class="col-sm-8"><code>@Model.ShortenedUrl</code> <button class="btn btn-sm btn-outline-secondary" onclick="copyToClipboard('@Model.ShortenedUrl')"><i class="fas fa-copy"></i></button></dd>

                                    <dt class="col-sm-4">Original URL</dt>
                                    <dd class="col-sm-8">@Model.UrlShort.DestinationUrls.FirstOrDefault()?.Url</dd>

                                    <dt class="col-sm-4">Created</dt>
                                    <dd class="col-sm-8">@Model.UrlShort.CreatedAt.ToString("MMM d, yyyy")</dd>

                                    @if (Model.UrlShort.ExpirationDate.HasValue)
                                    {
                                        <dt class="col-sm-4">Expires</dt>
                                        <dd class="col-sm-8">@Model.UrlShort.ExpirationDate.Value.ToString("MMM d, yyyy")</dd>
                                    }
                                </dl>
                            </div>
                            <div class="col-md-6">
                                <form method="get" class="mb-3">
                                    <input type="hidden" name="id" value="@Model.UrlShort.Id"/>
                                    <div class="row g-2">
                                        <div class="col-sm-5">
                                            <label class="form-label">Start Date</label>
                                            <input type="date" name="startDate" class="form-control form-control-sm"/>
                                        </div>
                                        <div class="col-sm-5">
                                            <label class="form-label">End Date</label>
                                            <input type="date" name="endDate" class="form-control form-control-sm"/>
                                        </div>
                                        <div class="col-sm-2 d-flex align-items-end">
                                            <button type="submit" class="btn btn-primary btn-sm w-100">
                                                <i class="fas fa-filter"></i>
                                            </button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h5>Clicks Over Time</h5>
                            <canvas id="clicksChart" height="250"></canvas>
                        </div>

                        <div class="mb-4">
                            <h5>Click Statistics</h5>
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <div class="card bg-light">
                                        <div class="card-body text-center">
                                            <h3 class="mb-0">@Model.ClickStats.Count</h3>
                                            <p class="text-muted mb-0">Total Clicks</p>
                                        </div>
                                    </div>
                                </div>

                                @if (Model.IsProfessionalOrHigher)
                                {
                                    <div class="col-md-8">
                                        <div class="card">
                                            <div class="card-body">
                                                <a href="#" class="btn btn-success mb-2" onclick="downloadCSV()">
                                                    <i class="fas fa-file-csv me-2"></i>Download CSV
                                                </a>
                                                @if (Model.ClickStats.Any())
                                                {
                                                    <div>
                                                        <span class="text-muted">Top Countries: </span>
                                                        @string.Join(", ", Model.ClickStats
                                                            .Where(c => !string.IsNullOrEmpty(c.Country))
                                                            .GroupBy(c => c.Country)
                                                            .OrderByDescending(g => g.Count())
                                                            .Take(3)
                                                            .Select(g => $"{g.Key} ({g.Count()})"))
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        @if (Model.ClickStats.Any())
                        {
                            <div>
                                <h5>Recent Clicks</h5>
                                <div class="table-responsive">
                                    <table class="table table-sm table-hover">
                                        <thead class="table-light">
                                        <tr>
                                            <th>Time</th>
                                            <th>Country</th>
                                            <th>City</th>
                                            <th>Device</th>
                                            <th>Browser</th>
                                            <th>OS</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        @foreach (var click in Model.ClickStats.Take(10))
                                        {
                                            <tr>
                                                <td>@click.ClickedAt.ToString("g")</td>
                                                <td>@(click.Country ?? "-")</td>
                                                <td>@(click.City ?? "-")</td>
                                                <td>@(click.Device ?? "-")</td>
                                                <td>@(click.Browser ?? "-")</td>
                                                <td>@(click.OperatingSystem ?? "-")</td>
                                            </tr>
                                        }
                                        </tbody>
                                    </table>
                                    <nav>
                                        <ul class="pagination">
                                            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                                                <a class="page-link" href="?pageNumber=@(Model.PageNumber - 1)">Previous</a>
                                            </li>
                                            @for (int i = 1; i <= Model.TotalPages; i++)
                                            {
                                                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                                    <a class="page-link" href="?pageNumber=@i">@i</a>
                                                </li>
                                            }
                                            <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                                                <a class="page-link" href="?pageNumber=@(Model.PageNumber + 1)">Next</a>
                                            </li>
                                        </ul>
                                    </nav>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Chart data
            var ctx = document.getElementById('clicksChart').getContext('2d');
            var dates = @Html.Raw(Json.Serialize(Model.Dates));
            var clicks = @Html.Raw(Json.Serialize(Model.Clicks));
            
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Clicks',
                        data: clicks,
                        backgroundColor: 'rgba(13, 110, 253, 0.2)',
                        borderColor: 'rgba(13, 110, 253, 1)',
                        borderWidth: 2,
                        tension: 0.1,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                precision: 0
                            }
                        }
                    }
                }
            });
        });
        
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                alert('URL copied to clipboard!');
            });
        }
        
        function downloadCSV() {
            var csvContent = @Html.Raw(Json.Serialize(Model.CsvData));
            var blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            var url = URL.createObjectURL(blob);
            var link = document.createElement("a");
            link.setAttribute("href", url);
            link.setAttribute("download", "click_stats.csv");
            link.style.display = 'none';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
}